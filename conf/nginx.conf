#user  nobody;
worker_processes 1;

env JWT_SECRET;
#env JWT_SECRET_IS_BASE64_ENCODED;

events
{
		worker_connections 1024;
}

http
{
		default_type application/octet-stream;
		sendfile on;
		lua_package_path "/usr/local/openresty/lualib/?.lua;;";

		error_log "/logs/error.log";
		access_log "/logs/access.log";

		keepalive_timeout 65;

		#gzip  on;

		server
		{
				listen 31337;
				server_name localhost;

				#charset koi8-r;
				#access_log  logs/host.access.log  main;

				location /
				{
						#
						# (really) Wide-open CORS config for nginx
						#
						more_set_headers "Access-Control-Allow-Origin: $http_origin";
						more_set_headers "Access-Control-Allow-Credentials: true";
						more_set_headers "Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS";
						#
						# Custom headers and headers various browsers *should* be OK with but aren't
						#
						more_set_headers "Access-Control-Allow-Headers: Accept,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,X-Real-IP";
						more_set_headers "Access-Control-Expose-Headers: Accept,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,X-Real-IP";

						if ($request_method = "OPTIONS")
						{
								#
								# Tell client that this pre-flight info is valid for 20 days
								#
								more_set_headers "Access-Control-Max-Age: 1728000";
								more_set_headers "Content-Type: text/plain; charset=utf-8";
								more_set_headers "Content-Length: 0";
								return 204;
						}
						location /secure/
						{
								access_by_lua_file /scripts/bearer.lua;

								proxy_pass https://some/secure/endpoint/;
						}

						location /open/
						{
								more_set_headers "Access-Control-Allow-Headers: openId";
								more_set_headers "Access-Control-Expose-Headers: openId";

								proxy_pass https://some/open/endpoint/;
						}

						#error_page  404              /404.html;

						# redirect server error pages to the static page /50x.html
						#
						error_page 500 502 503 504 /50x.html;
						location = /50x.html
						{
								root html;
						}
				}
		}
